---
// Componente simplificado sin dependencias externas
---

<section class="py-16 lg:py-24 bg-gray-600" id="form">
  <div class="max-w-6xl mx-auto px-6">
    <!-- Section Header -->
    <div class="text-center max-w-3xl mx-auto mb-12">
      <div class="inline-flex items-center gap-2 bg-white/20 rounded-full px-4 py-2 mb-6">
        <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
          <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z"/>
        </svg>
        <span class="text-white font-medium text-sm">Formulario de Contacto</span>
      </div>
      
      <h2 class="text-3xl lg:text-4xl font-bold text-white leading-tight mb-4">
        Cuéntanos Sobre Tu Proyecto
      </h2>
      
      <p class="text-lg text-white/80 leading-relaxed">
        Completa el formulario y nos pondremos en contacto contigo en menos de 24 horas
      </p>
    </div>

    <div class="grid lg:grid-cols-2 gap-8 items-start">
      <!-- Contact Form -->
      <div class="bg-gray-700 rounded-lg p-8 border border-gray-600">
        <form id="contactForm" class="space-y-6">
          <!-- Personal Information -->
          <div class="grid md:grid-cols-2 gap-4">
            <div class="form-group">
              <label for="firstName" class="block text-sm font-medium text-white mb-2">
                Nombre *
              </label>
              <input 
                type="text" 
                id="firstName" 
                name="firstName" 
                required
                class="w-full px-4 py-3 bg-gray-600 border border-gray-500 rounded-lg text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-brand-primary focus:border-transparent transition-all duration-200"
                placeholder="Tu nombre"
              />
              <div class="error-message text-red-400 text-sm mt-1 hidden"></div>
            </div>

            <div class="form-group">
              <label for="lastName" class="block text-sm font-medium text-white mb-2">
                Apellido *
              </label>
              <input 
                type="text" 
                id="lastName" 
                name="lastName" 
                required
                class="w-full px-4 py-3 bg-gray-600 border border-gray-500 rounded-lg text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-brand-primary focus:border-transparent transition-all duration-200"
                placeholder="Tu apellido"
              />
              <div class="error-message text-red-400 text-sm mt-1 hidden"></div>
            </div>
          </div>

          <!-- Contact Information -->
          <div class="grid md:grid-cols-2 gap-4">
            <div class="form-group">
              <label for="email" class="block text-sm font-medium text-white mb-2">
                Email *
              </label>
              <input 
                type="email" 
                id="email" 
                name="email" 
                required
                class="w-full px-4 py-3 bg-gray-600 border border-gray-500 rounded-lg text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-brand-primary focus:border-transparent transition-all duration-200"
                placeholder="tu@email.com"
              />
              <div class="error-message text-red-400 text-sm mt-1 hidden"></div>
            </div>

            <div class="form-group">
              <label for="phone" class="block text-sm font-medium text-white mb-2">
                Teléfono *
              </label>
              <input 
                type="tel" 
                id="phone" 
                name="phone" 
                required
                class="w-full px-4 py-3 bg-gray-600 border border-gray-500 rounded-lg text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-brand-primary focus:border-transparent transition-all duration-200"
                placeholder="+593 99 999 9999"
              />
              <div class="error-message text-red-400 text-sm mt-1 hidden"></div>
            </div>
          </div>

          <!-- Project Type -->
          <div class="form-group">
            <label for="projectType" class="block text-sm font-medium text-white mb-2">
              Tipo de Proyecto *
            </label>
            <select 
              id="projectType" 
              name="projectType" 
              required
              class="w-full px-4 py-3 bg-gray-600 border border-gray-500 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-brand-primary focus:border-transparent transition-all duration-200"
            >
              <option value="" disabled selected class="text-gray-400">Selecciona el tipo de proyecto</option>
              <option value="residential" class="text-gray-900">Construcción Residencial</option>
              <option value="commercial" class="text-gray-900">Construcción Comercial</option>
              <option value="renovation" class="text-gray-900">Remodelación</option>
              <option value="maintenance" class="text-gray-900">Mantenimiento</option>
              <option value="other" class="text-gray-900">Otro</option>
            </select>
            <div class="error-message text-red-400 text-sm mt-1 hidden"></div>
          </div>

          <!-- Budget Range -->
          <div class="form-group">
            <label for="budget" class="block text-sm font-medium text-white mb-2">
              Presupuesto Estimado
            </label>
            <select 
              id="budget" 
              name="budget"
              class="w-full px-4 py-3 bg-gray-600 border border-gray-500 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-brand-primary focus:border-transparent transition-all duration-200"
            >
              <option value="" disabled selected class="text-gray-400">Selecciona un rango (opcional)</option>
              <option value="under-20k" class="text-gray-900">Menos de $20,000</option>
              <option value="20k-50k" class="text-gray-900">$20,000 - $50,000</option>
              <option value="50k-100k" class="text-gray-900">$50,000 - $100,000</option>
              <option value="100k-200k" class="text-gray-900">$100,000 - $200,000</option>
              <option value="over-200k" class="text-gray-900">Más de $200,000</option>
            </select>
          </div>

          <!-- Timeline -->
          <div class="form-group">
            <label for="timeline" class="block text-sm font-medium text-white mb-2">
              Cronograma Deseado
            </label>
            <select 
              id="timeline" 
              name="timeline"
              class="w-full px-4 py-3 bg-gray-600 border border-gray-500 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-brand-primary focus:border-transparent transition-all duration-200"
            >
              <option value="" disabled selected class="text-gray-400">¿Cuándo te gustaría empezar?</option>
              <option value="asap" class="text-gray-900">Lo antes posible</option>
              <option value="1-month" class="text-gray-900">Dentro de 1 mes</option>
              <option value="3-months" class="text-gray-900">Dentro de 3 meses</option>
              <option value="6-months" class="text-gray-900">Dentro de 6 meses</option>
              <option value="flexible" class="text-gray-900">Soy flexible</option>
            </select>
          </div>

          <!-- Project Description -->
          <div class="form-group">
            <label for="message" class="block text-sm font-medium text-white mb-2">
              Descripción del Proyecto *
            </label>
            <textarea 
              id="message" 
              name="message" 
              required
              rows="4"
              class="w-full px-4 py-3 bg-gray-600 border border-gray-500 rounded-lg text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-brand-primary focus:border-transparent transition-all duration-200 resize-none"
              placeholder="Cuéntanos más sobre tu proyecto. Incluye detalles como ubicación, tamaño, requisitos especiales, etc."
            ></textarea>
            <div class="error-message text-red-400 text-sm mt-1 hidden"></div>
            <div class="text-sm text-white/70 mt-1">
              <span id="charCount">0</span>/500 caracteres
            </div>
          </div>

          <!-- Terms and Privacy -->
          <div class="form-group">
            <label class="flex items-start gap-3 cursor-pointer">
              <input 
                type="checkbox" 
                id="terms" 
                name="terms" 
                required
                class="mt-1 w-4 h-4 text-brand-primary bg-gray-600 border border-gray-500 rounded focus:ring-brand-primary focus:ring-2"
              />
              <span class="text-sm text-white/80 leading-relaxed">
                Acepto los <a href="/terminos" class="text-brand-primary hover:underline">términos y condiciones</a> y la 
                <a href="/privacidad" class="text-brand-primary hover:underline">política de privacidad</a>. 
                Autorizo el procesamiento de mis datos para contacto relacionado con este proyecto. *
              </span>
            </label>
            <div class="error-message text-red-400 text-sm mt-1 hidden"></div>
          </div>

          <!-- Submit Button -->
          <div class="pt-4">
            <button type="submit" id="submitBtn" class="w-full bg-brand-primary hover:bg-brand-primary-dark text-white px-6 py-3 rounded-lg font-medium transition-colors duration-200 flex items-center justify-center gap-2">
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path d="M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z"/>
              </svg>
              <span id="submitText">Enviar Solicitud</span>
            </button>
          </div>

          <!-- Success/Error Messages -->
          <div id="successMessage" class="hidden bg-green-600/20 border border-green-500 rounded-lg p-4 text-green-300">
            <div class="flex items-center gap-3">
              <svg class="w-6 h-6 text-green-400" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
              </svg>
              <div>
                <div class="font-semibold">¡Mensaje enviado exitosamente!</div>
                <div class="text-sm">Nos pondremos en contacto contigo pronto.</div>
              </div>
            </div>
          </div>

          <div id="errorMessage" class="hidden bg-red-600/20 border border-red-500 rounded-lg p-4 text-red-300">
            <div class="flex items-center gap-3">
              <svg class="w-6 h-6 text-red-400" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/>
              </svg>
              <div>
                <div class="font-semibold">Error al enviar el mensaje</div>
                <div class="text-sm">Por favor, intenta nuevamente o contáctanos directamente.</div>
              </div>
            </div>
          </div>
        </form>
      </div>

      <!-- Contact Information & Benefits -->
      <div class="space-y-6">
        <!-- Why Contact Us -->
        <div class="bg-gray-700 rounded-lg p-6 border border-gray-600">
          <h3 class="text-xl font-bold text-white mb-4 flex items-center gap-2">
            <svg class="w-5 h-5 text-yellow-500" fill="currentColor" viewBox="0 0 20 20">
              <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
            </svg>
            ¿Por qué elegirnos?
          </h3>
          
          <div class="space-y-4">
            <div class="flex items-start gap-3">
              <div class="w-8 h-8 bg-green-600 rounded-lg flex items-center justify-center flex-shrink-0 mt-1">
                <svg class="w-4 h-4 text-white" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
                </svg>
              </div>
              <div>
                <div class="font-medium text-white">15+ Años de Experiencia</div>
                <div class="text-white/70 text-sm">Equipo especializado en construcción y remodelación</div>
              </div>
            </div>

            <div class="flex items-start gap-3">
              <div class="w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center flex-shrink-0 mt-1">
                <svg class="w-4 h-4 text-white" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M2.166 4.999A11.954 11.954 0 0010 1.944 11.954 11.954 0 0017.834 5c.11.65.166 1.32.166 2.001 0 5.225-3.34 9.67-8 11.317C5.34 16.67 2 12.225 2 7c0-.682.057-1.35.166-2.001zm11.541 3.708a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
                </svg>
              </div>
              <div>
                <div class="font-medium text-white">Garantía Completa</div>
                <div class="text-white/70 text-sm">Todos nuestros proyectos incluyen garantía integral</div>
              </div>
            </div>

            <div class="flex items-start gap-3">
              <div class="w-8 h-8 bg-purple-600 rounded-lg flex items-center justify-center flex-shrink-0 mt-1">
                <svg class="w-4 h-4 text-white" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd"/>
                </svg>
              </div>
              <div>
                <div class="font-medium text-white">Respuesta Rápida</div>
                <div class="text-white/70 text-sm">Te contactamos en menos de 24 horas</div>
              </div>
            </div>

            <div class="flex items-start gap-3">
              <div class="w-8 h-8 bg-green-600 rounded-lg flex items-center justify-center flex-shrink-0 mt-1">
                <svg class="w-4 h-4 text-white" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z"/>
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z" clip-rule="evenodd"/>
                </svg>
              </div>
              <div>
                <div class="font-medium text-white">Cotización Gratuita</div>
                <div class="text-white/70 text-sm">Evaluación y presupuesto sin costo</div>
              </div>
            </div>
          </div>
        </div>

        <!-- Process Steps -->
        <div class="bg-gray-700 rounded-lg p-6 border border-gray-600">
          <h3 class="text-xl font-bold text-white mb-4 flex items-center gap-2">
            <svg class="w-5 h-5 text-green-600" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"/>
            </svg>
            Nuestro Proceso
          </h3>
          
          <div class="space-y-4">
            <div class="flex items-start gap-3">
              <div class="w-6 h-6 bg-green-600 rounded-full flex items-center justify-center text-white font-bold text-sm flex-shrink-0">1</div>
              <div>
                <div class="font-medium text-white">Consulta Inicial</div>
                <div class="text-white/70 text-sm">Analizamos tus necesidades y requerimientos</div>
              </div>
            </div>

            <div class="flex items-start gap-3">
              <div class="w-6 h-6 bg-blue-600 rounded-full flex items-center justify-center text-white font-bold text-sm flex-shrink-0">2</div>
              <div>
                <div class="font-medium text-white">Evaluación y Propuesta</div>
                <div class="text-white/70 text-sm">Visita técnica y cotización detallada</div>
              </div>
            </div>

            <div class="flex items-start gap-3">
              <div class="w-6 h-6 bg-purple-600 rounded-full flex items-center justify-center text-white font-bold text-sm flex-shrink-0">3</div>
              <div>
                <div class="font-medium text-white">Planificación</div>
                <div class="text-white/70 text-sm">Diseño detallado y cronograma del proyecto</div>
              </div>
            </div>

            <div class="flex items-start gap-3">
              <div class="w-6 h-6 bg-green-600 rounded-full flex items-center justify-center text-white font-bold text-sm flex-shrink-0">4</div>
              <div>
                <div class="font-medium text-white">Ejecución</div>
                <div class="text-white/70 text-sm">Construcción con seguimiento constante</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('contactForm') as HTMLFormElement;
    const submitBtn = document.getElementById('submitBtn') as HTMLButtonElement;
    const submitText = document.getElementById('submitText') as HTMLSpanElement;
    const successMessage = document.getElementById('successMessage') as HTMLDivElement;
    const errorMessage = document.getElementById('errorMessage') as HTMLDivElement;
    const messageTextarea = document.getElementById('message') as HTMLTextAreaElement;
    const charCount = document.getElementById('charCount') as HTMLSpanElement;

    // Character counter for message
    messageTextarea.addEventListener('input', () => {
      const count = messageTextarea.value.length;
      charCount.textContent = count.toString();
      
      if (count > 500) {
        charCount.classList.add('text-red-400');
        charCount.classList.remove('text-white/70');
      } else {
        charCount.classList.remove('text-red-400');
        charCount.classList.add('text-white/70');
      }
    });

    // Phone number formatting
    const phoneInput = document.getElementById('phone') as HTMLInputElement;
    phoneInput.addEventListener('input', (e) => {
      let value = (e.target as HTMLInputElement).value.replace(/\D/g, '');
      if (value.length > 10) value = value.slice(0, 10);
      
      if (value.length >= 6) {
        value = value.replace(/(\d{3})(\d{3})(\d{4})/, '$1 $2 $3');
      } else if (value.length >= 3) {
        value = value.replace(/(\d{3})(\d{3})/, '$1 $2');
      }
      
      (e.target as HTMLInputElement).value = value;
    });

    // Real-time validation
    const validateField = (field: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement): boolean => {
      const formGroup = field.closest('.form-group') as HTMLElement;
      const errorMessage = formGroup.querySelector('.error-message') as HTMLElement;
      let isValid = true;
      let message = '';

      // Clear previous states
      field.classList.remove('border-red-500', 'border-green-500');
      errorMessage.classList.add('hidden');

      if (field.hasAttribute('required') && !field.value.trim()) {
        isValid = false;
        message = 'Este campo es obligatorio';
      } else if (field.type === 'email' && field.value) {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(field.value)) {
          isValid = false;
          message = 'Ingresa un email válido';
        }
      } else if (field.type === 'tel' && field.value) {
        const phoneRegex = /^\d{3}\s\d{3}\s\d{4}$/;
        if (!phoneRegex.test(field.value)) {
          isValid = false;
          message = 'Ingresa un teléfono válido (10 dígitos)';
        }
      } else if (field.id === 'message' && field.value.length > 500) {
        isValid = false;
        message = 'El mensaje no puede exceder 500 caracteres';
      }

      if (!isValid) {
        field.classList.add('border-red-500');
        errorMessage.textContent = message;
        errorMessage.classList.remove('hidden');
      } else if (field.value.trim()) {
        field.classList.add('border-green-500');
      }

      return isValid;
    };

    // Add validation listeners
    const formFields = form.querySelectorAll('input, textarea, select') as NodeListOf<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>;
    formFields.forEach(field => {
      field.addEventListener('blur', () => validateField(field));
      field.addEventListener('input', () => {
        if (field.classList.contains('border-red-500')) {
          validateField(field);
        }
      });
    });

    // Form submission
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      // Validate all fields
      let isFormValid = true;
      formFields.forEach(field => {
        if (!validateField(field)) {
          isFormValid = false;
        }
      });

      // Check terms acceptance
      const termsCheckbox = document.getElementById('terms') as HTMLInputElement;
      if (!termsCheckbox.checked) {
        isFormValid = false;
        const termsGroup = termsCheckbox.closest('.form-group') as HTMLElement;
        const termsError = termsGroup.querySelector('.error-message') as HTMLElement;
        termsError.textContent = 'Debes aceptar los términos y condiciones';
        termsError.classList.remove('hidden');
      }

      if (!isFormValid) {
        // Scroll to first error
        const firstError = form.querySelector('.border-red-500') as HTMLElement;
        if (firstError) {
          firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }
        return;
      }

      // Show loading state
      submitBtn.disabled = true;
      submitText.textContent = 'Enviando...';
      successMessage.classList.add('hidden');
      errorMessage.classList.add('hidden');

      try {
        // Simulate form submission (replace with actual endpoint)
        await new Promise(resolve => setTimeout(resolve, 2000));
        
        // Show success message
        successMessage.classList.remove('hidden');
        form.reset();
        
        // Reset character counter
        charCount.textContent = '0';
        
        // Remove validation classes
        formFields.forEach(field => {
          field.classList.remove('border-red-500', 'border-green-500');
        });
        
        // Scroll to success message
        successMessage.scrollIntoView({ behavior: 'smooth', block: 'center' });
        
      } catch (error) {
        // Show error message
        errorMessage.classList.remove('hidden');
        errorMessage.scrollIntoView({ behavior: 'smooth', block: 'center' });
      } finally {
        // Reset button state
        submitBtn.disabled = false;
        submitText.textContent = 'Enviar Solicitud';
      }
    });
  });
</script>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('contactForm') as HTMLFormElement;
    const submitBtn = document.getElementById('submitBtn') as HTMLButtonElement;
    const submitText = document.getElementById('submitText') as HTMLSpanElement;
    const successMessage = document.getElementById('successMessage') as HTMLDivElement;
    const errorMessage = document.getElementById('errorMessage') as HTMLDivElement;
    const messageTextarea = document.getElementById('message') as HTMLTextAreaElement;
    const charCount = document.getElementById('charCount') as HTMLSpanElement;

    // Character counter for message
    messageTextarea.addEventListener('input', () => {
      const count = messageTextarea.value.length;
      charCount.textContent = count.toString();
      
      if (count > 500) {
        charCount.classList.add('text-red-400');
        charCount.classList.remove('text-gray-400');
      } else {
        charCount.classList.remove('text-red-400');
        charCount.classList.add('text-gray-400');
      }
    });

    // Phone number formatting
    const phoneInput = document.getElementById('phone') as HTMLInputElement;
    phoneInput.addEventListener('input', (e) => {
      let value = (e.target as HTMLInputElement).value.replace(/\D/g, '');
      if (value.length > 10) value = value.slice(0, 10);
      
      if (value.length >= 6) {
        value = value.replace(/(\d{3})(\d{3})(\d{4})/, '$1 $2 $3');
      } else if (value.length >= 3) {
        value = value.replace(/(\d{3})(\d{3})/, '$1 $2');
      }
      
      (e.target as HTMLInputElement).value = value;
    });

    // Real-time validation
    const validateField = (field: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement): boolean => {
      const formGroup = field.closest('.form-group') as HTMLElement;
      const errorMessage = formGroup.querySelector('.error-message') as HTMLElement;
      let isValid = true;
      let message = '';

      // Clear previous states
      field.classList.remove('border-red-500', 'border-green-500');
      errorMessage.classList.add('hidden');

      if (field.hasAttribute('required') && !field.value.trim()) {
        isValid = false;
        message = 'Este campo es obligatorio';
      } else if (field.type === 'email' && field.value) {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(field.value)) {
          isValid = false;
          message = 'Ingresa un email válido';
        }
      } else if (field.type === 'tel' && field.value) {
        const phoneRegex = /^\d{3}\s\d{3}\s\d{4}$/;
        if (!phoneRegex.test(field.value)) {
          isValid = false;
          message = 'Ingresa un teléfono válido (10 dígitos)';
        }
      } else if (field.id === 'message' && field.value.length > 500) {
        isValid = false;
        message = 'El mensaje no puede exceder 500 caracteres';
      }

      if (!isValid) {
        field.classList.add('border-red-500');
        errorMessage.textContent = message;
        errorMessage.classList.remove('hidden');
      } else if (field.value.trim()) {
        field.classList.add('border-green-500');
      }

      return isValid;
    };

    // Add validation listeners
    const formFields = form.querySelectorAll('input, textarea, select') as NodeListOf<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>;
    formFields.forEach(field => {
      field.addEventListener('blur', () => validateField(field));
      field.addEventListener('input', () => {
        if (field.classList.contains('border-red-500')) {
          validateField(field);
        }
      });
    });

    // Form submission
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      // Validate all fields
      let isFormValid = true;
      formFields.forEach(field => {
        if (!validateField(field)) {
          isFormValid = false;
        }
      });

      // Check terms acceptance
      const termsCheckbox = document.getElementById('terms') as HTMLInputElement;
      if (!termsCheckbox.checked) {
        isFormValid = false;
        const termsGroup = termsCheckbox.closest('.form-group') as HTMLElement;
        const termsError = termsGroup.querySelector('.error-message') as HTMLElement;
        termsError.textContent = 'Debes aceptar los términos y condiciones';
        termsError.classList.remove('hidden');
      }

      if (!isFormValid) {
        // Scroll to first error
        const firstError = form.querySelector('.border-red-500') as HTMLElement;
        if (firstError) {
          firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }
        return;
      }

      // Show loading state
      submitBtn.disabled = true;
      submitText.textContent = 'Enviando...';
      successMessage.classList.add('hidden');
      errorMessage.classList.add('hidden');

      try {
        // Simulate form submission (replace with actual endpoint)
        await new Promise(resolve => setTimeout(resolve, 2000));
        
        // Show success message
        successMessage.classList.remove('hidden');
        form.reset();
        
        // Reset character counter
        charCount.textContent = '0';
        
        // Remove validation classes
        formFields.forEach(field => {
          field.classList.remove('border-red-500', 'border-green-500');
        });
        
        // Scroll to success message
        successMessage.scrollIntoView({ behavior: 'smooth', block: 'center' });
        
      } catch (error) {
        // Show error message
        errorMessage.classList.remove('hidden');
        errorMessage.scrollIntoView({ behavior: 'smooth', block: 'center' });
      } finally {
        // Reset button state
        submitBtn.disabled = false;
        submitText.textContent = 'Enviar Solicitud';
      }
    });
  });
</script>
---
import { Icon } from "astro-icon/components";
import Button from '../../ui/Button.astro';
import SectionLayout from '../../ui/SectionLayout.astro';

export interface Props {
  title: string;
  content: string;
  images: string[];
}

const { title, content, images } = Astro.props;

// Split content into paragraphs
const paragraphs = content.split('\n\n').filter(p => p.trim());
---

<section class="py-20 bg-gradient-to-br from-gray-50 via-white to-gray-50 relative overflow-hidden" id="project-details">
  <!-- Decorative background elements -->
  <div class="absolute top-0 left-0 w-72 h-72 bg-primary-green/5 rounded-full blur-3xl"></div>
  <div class="absolute bottom-0 right-0 w-96 h-96 bg-blue-500/5 rounded-full blur-3xl"></div>

  <div class="max-w-7xl mx-auto px-6">
    <!-- Section Header -->
    <div class="text-center max-w-4xl mx-auto mb-16" data-aos="fade-up">
      <div class="inline-flex items-center gap-2 bg-primary-green/10 backdrop-blur-sm border border-primary-green/20 rounded-full px-4 py-2 mb-6">
        <Icon name="ph:image-square" class="w-5 h-5 text-primary-green" />
        <span class="text-primary-green font-semibold text-sm">Detalles del Proyecto</span>
      </div>
      
      <h2 class="text-4xl lg:text-6xl font-bold text-gray-900 leading-tight mb-6">
        {title}
      </h2>
      
      <p class="text-xl text-gray-600 leading-relaxed">
        Explora cada detalle de este proyecto y descubre la calidad en cada acabado.
      </p>
    </div>

    <!-- Main Layout Grid -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-12 w-full">
      
      <!-- Gallery Section -->
      <div class="lg:col-span-2 bg-white rounded-3xl shadow-2xl border border-gray-100 overflow-hidden" data-aos="fade-right" data-aos-duration="800">
        <div class="gallery-container relative h-[400px] lg:h-[500px] group bg-gray-50">
          {images.map((image, index) => (
            <div 
              class={`gallery-slide absolute inset-0 transition-all duration-700 ease-in-out ${index === 0 ? 'opacity-100' : 'opacity-0'}`}
              data-slide={index}
            >
              <img
                src={image}
                alt={`${title} - Imagen ${index + 1}`}
                class="w-full h-full object-cover"
              />
            </div>
          ))}
          
          <!-- Navigation Controls -->
          <div class="absolute inset-0 flex items-center justify-between p-4 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
            <button class="gallery-prev w-12 h-12 bg-white/90 backdrop-blur-sm hover:bg-white rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 flex items-center justify-center">
              <Icon name="ph:caret-left" class="w-5 h-5 text-gray-900" />
            </button>
            <button class="gallery-next w-12 h-12 bg-white/90 backdrop-blur-sm hover:bg-white rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 flex items-center justify-center">
              <Icon name="ph:caret-right" class="w-5 h-5 text-gray-900" />
            </button>
          </div>

          <!-- Image Counter -->
          <div class="absolute top-4 right-4 bg-gray-900/80 backdrop-blur-sm text-white px-3 py-1 rounded-2xl text-sm font-semibold shadow-lg">
            <span class="gallery-counter">1</span> / {images.length}
          </div>
        </div>

        <!-- Thumbnail Strip -->
        <div class="p-6 border-t border-gray-100">
          <div class="grid grid-cols-4 gap-3">
            {images.map((image, index) => (
              <button 
                class={`gallery-thumb h-20 rounded-2xl overflow-hidden transition-all duration-300 shadow-md hover:shadow-lg ${index === 0 ? 'ring-2 ring-primary-green' : 'ring-1 ring-gray-200 hover:ring-primary-green/50'}`}
                data-slide={index}
              >
                <img
                  src={image}
                  alt={`Thumbnail ${index + 1}`}
                  class="w-full h-full object-cover"
                />
              </button>
            ))}
          </div>
        </div>

        <!-- Action Buttons Section -->
        <div class="bg-gradient-to-r from-slate-900 to-slate-800 rounded-b-3xl p-6 border-t border-gray-100 relative overflow-hidden">
          <!-- Background decoration -->
          <div class="absolute inset-0">
            <div class="absolute top-0 right-0 w-32 h-32 bg-primary-green/10 rounded-full blur-2xl"></div>
            <div class="absolute bottom-0 left-0 w-24 h-24 bg-blue-500/10 rounded-full blur-xl"></div>
          </div>

          <div class="relative z-10">
            <div class="grid grid-cols-1 sm:grid-cols-3 gap-3">
              <Button 
                variant="outline"
                size="sm"
                iconPosition="left"
                icon="ph:download"
                animation="hover"
                class="bg-transparent border-2 border-white text-white hover:bg-white hover:text-gray-900"
              >
                Descargar
              </Button>
              
              <Button 
                variant="primary"
                size="sm"
                iconPosition="left"
                icon="ph:eye"
                animation="hover"
              >
                Tour Virtual
              </Button>
              
              <Button 
                variant="success"
                size="sm"
                iconPosition="left"
                icon="ph:info"
                animation="hover"
              >
                Más Info
              </Button>
            </div>
          </div>
        </div>
      </div>

      <!-- Project Info Column -->
      <div class="h-full space-y-8" data-aos="fade-left" data-aos-duration="800" data-aos-delay="200">
        <!-- Project Stats Card -->
        <div class="bg-white rounded-3xl shadow-2xl border border-gray-100 p-8">
          <div class="flex items-center gap-3 mb-6">
            <div class="w-12 h-12 bg-gradient-to-br from-primary-green to-emerald-500 rounded-2xl flex items-center justify-center">
              <Icon name="ph:chart-bar-fill" class="w-6 h-6 text-white" />
            </div>
            <h3 class="text-2xl font-bold text-gray-900">Especificaciones</h3>
          </div>
          
          <div class="space-y-4">
            <!-- Size -->
            <div class="bg-gradient-to-br from-yellow-50 to-orange-50 rounded-2xl p-4 border border-yellow-100">
              <div class="flex items-center gap-3">
                <div class="w-12 h-12 bg-yellow-400 rounded-xl flex items-center justify-center">
                  <Icon name="ph:ruler" class="w-6 h-6 text-gray-900" />
                </div>
                <div>
                  <div class="text-xl font-bold text-gray-900">13,500 m²</div>
                  <div class="text-sm text-gray-600">Área construida</div>
                </div>
              </div>
            </div>

            <!-- Floors -->
            <div class="bg-gradient-to-br from-blue-50 to-blue-100 rounded-2xl p-4 border border-blue-100">
              <div class="flex items-center gap-3">
                <div class="w-12 h-12 bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl flex items-center justify-center">
                  <Icon name="ph:buildings" class="w-6 h-6 text-white" />
                </div>
                <div>
                  <div class="text-xl font-bold text-gray-900">5 Pisos</div>
                  <div class="text-sm text-gray-600">Niveles</div>
                </div>
              </div>
            </div>

            <!-- Units -->
            <div class="bg-gradient-to-br from-purple-50 to-purple-100 rounded-2xl p-4 border border-purple-100">
              <div class="flex items-center gap-3">
                <div class="w-12 h-12 bg-gradient-to-br from-purple-500 to-purple-600 rounded-xl flex items-center justify-center">
                  <Icon name="ph:house" class="w-6 h-6 text-white" />
                </div>
                <div>
                  <div class="text-xl font-bold text-gray-900">20 Departamentos</div>
                  <div class="text-sm text-gray-600">Unidades</div>
                </div>
              </div>
            </div>

            <!-- Parking -->
            <div class="bg-gradient-to-br from-green-50 to-green-100 rounded-2xl p-4 border border-green-100">
              <div class="flex items-center gap-3">
                <div class="w-12 h-12 bg-gradient-to-br from-green-500 to-green-600 rounded-xl flex items-center justify-center">
                  <Icon name="ph:car" class="w-6 h-6 text-white" />
                </div>
                <div>
                  <div class="text-xl font-bold text-gray-900">30 Espacios</div>
                  <div class="text-sm text-gray-600">Estacionamiento</div>
                </div>
              </div>
            </div>
          </div>

          <!-- Completion Date -->
          <div class="mt-6 bg-gradient-to-r from-gray-50 to-gray-100 rounded-2xl p-4 border border-gray-200">
            <div class="flex items-center gap-3">
              <div class="w-12 h-12 bg-gradient-to-br from-gray-700 to-gray-800 rounded-xl flex items-center justify-center">
                <Icon name="ph:calendar-check" class="w-6 h-6 text-white" />
              </div>
              <div>
                <div class="text-xl font-bold text-gray-900">28/07/2020</div>
                <div class="text-gray-600">Fecha de finalización</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const gallerySlides = document.querySelectorAll('.gallery-slide') as NodeListOf<HTMLElement>;
    const galleryThumbs = document.querySelectorAll('.gallery-thumb') as NodeListOf<HTMLButtonElement>;
    const prevButton = document.querySelector('.gallery-prev') as HTMLButtonElement | null;
    const nextButton = document.querySelector('.gallery-next') as HTMLButtonElement | null;
    const galleryCounter = document.querySelector('.gallery-counter') as HTMLElement | null;
    
    let currentSlide = 0;
    const totalSlides = gallerySlides.length;
    
    function updateSlide(index: number): void {
      if (index < 0 || index >= totalSlides) return;
      
      // Update slides
      gallerySlides.forEach((slide, i) => {
        slide.classList.toggle('opacity-100', i === index);
        slide.classList.toggle('opacity-0', i !== index);
      });
      
      // Update thumbnails
      galleryThumbs.forEach((thumb, i) => {
        if (i === index) {
          thumb.classList.remove('ring-1', 'ring-gray-200', 'hover:ring-primary-green/50');
          thumb.classList.add('ring-2', 'ring-primary-green');
        } else {
          thumb.classList.remove('ring-2', 'ring-primary-green');
          thumb.classList.add('ring-1', 'ring-gray-200', 'hover:ring-primary-green/50');
        }
      });
      
      // Update counter
      if (galleryCounter) {
        galleryCounter.textContent = (index + 1).toString();
      }
      
      currentSlide = index;
    }
    
    function nextSlide(): void {
      updateSlide((currentSlide + 1) % totalSlides);
    }
    
    function prevSlide(): void {
      updateSlide((currentSlide - 1 + totalSlides) % totalSlides);
    }
    
    // Event listeners
    if (prevButton) {
      prevButton.addEventListener('click', prevSlide);
    }
    
    if (nextButton) {
      nextButton.addEventListener('click', nextSlide);
    }
    
    // Thumbnail navigation
    galleryThumbs.forEach((thumb, index) => {
      thumb.addEventListener('click', () => updateSlide(index));
    });
    
    // Initialize
    updateSlide(0);
  });
</script>
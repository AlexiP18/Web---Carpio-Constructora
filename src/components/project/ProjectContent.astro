---
import { Icon } from "astro-icon/components";
import Button from '../ui/Button.astro';

export interface Props {
  title: string;
  content: string;
  images: string[];
}

const { title, content, images } = Astro.props;

// Split content into paragraphs
const paragraphs = content.split('\n\n').filter(p => p.trim());
---

<section class="py-20 bg-gray-100" id="project-details">
  <div class="max-w-7xl mx-auto px-6">
    
    <!-- Main Layout Grid -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
      
      <!-- Gallery Section -->
      <div class="bg-white rounded-lg overflow-hidden shadow-lg">
        <div class="gallery-container relative h-[400px] lg:h-[500px] group">
          {images.map((image, index) => (
            <div 
              class={`gallery-slide absolute inset-0 transition-all duration-700 ease-in-out ${index === 0 ? 'opacity-100' : 'opacity-0'}`}
              data-slide={index}
            >
              <img
                src={image}
                alt={`${title} - Imagen ${index + 1}`}
                class="w-full h-full object-cover"
              />
            </div>
          ))}
          
          <!-- Navigation Controls -->
          <div class="absolute inset-0 flex items-center justify-between p-4 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
            <button class="gallery-prev bg-white/90 hover:bg-white rounded-lg p-3 transition-all duration-200 shadow-lg">
              <svg class="w-5 h-5 text-gray-900" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd"/>
              </svg>
            </button>
            <button class="gallery-next bg-white/90 hover:bg-white rounded-lg p-3 transition-all duration-200 shadow-lg">
              <svg class="w-5 h-5 text-gray-900" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
              </svg>
            </button>
          </div>

          <!-- Image Counter -->
          <div class="absolute top-4 right-4 bg-black/70 text-white px-3 py-1 rounded-lg text-sm">
            <span class="gallery-counter">1</span> / {images.length}
          </div>
        </div>

        <!-- Thumbnail Strip -->
        <div class="p-4">
          <div class="grid grid-cols-4 gap-3">
            {images.map((image, index) => (
              <button 
                class={`gallery-thumb h-20 rounded-lg overflow-hidden transition-all duration-300 ${index === 0 ? 'ring-2 ring-blue-500' : 'ring-1 ring-gray-200 hover:ring-blue-300'}`}
                data-slide={index}
              >
                <img
                  src={image}
                  alt={`Thumbnail ${index + 1}`}
                  class="w-full h-full object-cover"
                />
              </button>
            ))}
          </div>
        </div>
      </div>

      <!-- Project Info Column -->
      <div class="h-full">
        <!-- Project Info Card -->
        <div class="bg-white rounded-lg p-6 shadow-lg h-full flex flex-col">
          <!-- Title and Description -->
          <div class="space-y-4 mb-6 flex-grow flex flex-col">
            <h2 class="text-2xl font-bold text-gray-900">{title}</h2>
            <div class="flex-grow overflow-y-auto max-h-64 pr-2">
              <div class="space-y-3">
                {paragraphs.map((paragraph) => (
                  <p class="text-gray-700 text-sm leading-relaxed">
                    {paragraph}
                  </p>
                ))}
              </div>
            </div>
          </div>

          <!-- Project Details Grid -->
          <div class="space-y-3 mb-6 flex-shrink-0">
          <!-- Project Details Grid -->
          <div class="space-y-3 mb-6 flex-shrink-0">
            <!-- Size -->
            <div class="flex items-center gap-2">
              <div class="w-6 h-6 bg-gray-100 rounded flex items-center justify-center">
                <svg class="w-3 h-3 text-gray-600" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M3 4a1 1 0 011-1h3a1 1 0 011 1v3a1 1 0 01-1 1H4a1 1 0 01-1-1V4zm2 2V5h1v1H5zM3 13a1 1 0 011-1h3a1 1 0 011 1v3a1 1 0 01-1 1H4a1 1 0 01-1-1v-3zm2 2v-1h1v1H5zM13 4a1 1 0 011-1h3a1 1 0 011 1v3a1 1 0 01-1 1h-3a1 1 0 01-1-1V4zm2 2V5h1v1h-1z" clip-rule="evenodd"/>
                </svg>
              </div>
              <div>
                <div class="text-sm font-semibold text-gray-900">13,500 m²</div>
                <div class="text-xs text-gray-600">Área construida</div>
              </div>
            </div>

            <!-- Floors -->
            <div class="flex items-center gap-2">
              <div class="w-6 h-6 bg-gray-100 rounded flex items-center justify-center">
                <svg class="w-3 h-3 text-gray-600" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"/>
                </svg>
              </div>
              <div>
                <div class="text-sm font-semibold text-gray-900">5 Pisos</div>
                <div class="text-xs text-gray-600">Niveles</div>
              </div>
            </div>

            <!-- Units -->
            <div class="flex items-center gap-2">
              <div class="w-6 h-6 bg-gray-100 rounded flex items-center justify-center">
                <svg class="w-3 h-3 text-gray-600" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M4 4a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z" clip-rule="evenodd"/>
                </svg>
              </div>
              <div>
                <div class="text-sm font-semibold text-gray-900">20 Departamentos</div>
                <div class="text-xs text-gray-600">Unidades habitacionales</div>
              </div>
            </div>

            <!-- Parking -->
            <div class="flex items-center gap-2">
              <div class="w-6 h-6 bg-gray-100 rounded flex items-center justify-center">
                <svg class="w-3 h-3 text-gray-600" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M4 4a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2H4zm4 6a2 2 0 100-4 2 2 0 000 4zm-2 4a2 2 0 012-2h4a2 2 0 012 2v2H6v-2z" clip-rule="evenodd"/>
                </svg>
              </div>
              <div>
                <div class="text-sm font-semibold text-gray-900">30 Estacionamientos</div>
                <div class="text-xs text-gray-600">Espacios de parking</div>
              </div>
            </div>

            <!-- Date -->
            <div class="flex items-center gap-2">
              <div class="w-6 h-6 bg-gray-100 rounded flex items-center justify-center">
                <svg class="w-3 h-3 text-gray-600" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"/>
                </svg>
              </div>
              <div>
                <div class="text-sm font-semibold text-gray-900">28/07/2020</div>
                <div class="text-xs text-gray-600">Fecha de finalización</div>
              </div>
            </div>
          </div>

          <!-- Action Buttons -->
          <div class="grid grid-cols-3 gap-3 flex-shrink-0">
            <button class="bg-gray-900 hover:bg-gray-800 text-white py-2 px-3 rounded-lg text-sm font-medium transition-colors flex items-center justify-center gap-1">
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z" clip-rule="evenodd"/>
              </svg>
              Descargar
            </button>
            
            <button class="bg-blue-600 hover:bg-blue-700 text-white py-2 px-3 rounded-lg text-sm font-medium transition-colors flex items-center justify-center gap-1">
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                <path d="M10 12a2 2 0 100-4 2 2 0 000 4z"/>
                <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd"/>
              </svg>
              Tour Virtual
            </button>
            
            <button class="bg-green-600 hover:bg-green-700 text-white py-2 px-3 rounded-lg text-sm font-medium transition-colors">
              Solicitar Información
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const gallerySlides = document.querySelectorAll('.gallery-slide') as NodeListOf<HTMLElement>;
    const galleryThumbs = document.querySelectorAll('.gallery-thumb') as NodeListOf<HTMLButtonElement>;
    const prevButton = document.querySelector('.gallery-prev') as HTMLButtonElement | null;
    const nextButton = document.querySelector('.gallery-next') as HTMLButtonElement | null;
    const galleryCounter = document.querySelector('.gallery-counter') as HTMLElement | null;
    
    let currentSlide = 0;
    const totalSlides = gallerySlides.length;
    
    function updateSlide(index: number): void {
      if (index < 0 || index >= totalSlides) return;
      
      // Update slides
      gallerySlides.forEach((slide, i) => {
        slide.classList.toggle('opacity-100', i === index);
        slide.classList.toggle('opacity-0', i !== index);
      });
      
      // Update thumbnails
      galleryThumbs.forEach((thumb, i) => {
        if (i === index) {
          thumb.classList.remove('ring-1', 'ring-gray-200', 'hover:ring-blue-300');
          thumb.classList.add('ring-2', 'ring-blue-500');
        } else {
          thumb.classList.remove('ring-2', 'ring-blue-500');
          thumb.classList.add('ring-1', 'ring-gray-200', 'hover:ring-blue-300');
        }
      });
      
      // Update counter
      if (galleryCounter) {
        galleryCounter.textContent = (index + 1).toString();
      }
      
      currentSlide = index;
    }
    
    function nextSlide(): void {
      updateSlide((currentSlide + 1) % totalSlides);
    }
    
    function prevSlide(): void {
      updateSlide((currentSlide - 1 + totalSlides) % totalSlides);
    }
    
    // Event listeners
    if (prevButton) {
      prevButton.addEventListener('click', prevSlide);
    }
    
    if (nextButton) {
      nextButton.addEventListener('click', nextSlide);
    }
    
    // Thumbnail navigation
    galleryThumbs.forEach((thumb, index) => {
      thumb.addEventListener('click', () => updateSlide(index));
    });
    
    // Initialize
    updateSlide(0);
  });
</script>